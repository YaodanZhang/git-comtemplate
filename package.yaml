name: git-comtemplate
version: 1
license: GPL-3.0-or-later

dependencies:
- base >= 4 && < 5
- optparse-applicative ^>= 0.14
- text ^>= 1.2
- dhall ^>= 1.24
- containers ^>= 0.6
- process ^>= 1.6
- aeson ^>= 1.4
- bytestring ^>= 0.10
- directory ^>= 1.3
- filepath ^>= 1.4

executable:
  main: Main.hs
  source-dirs: app

# library:
#   source-dirs: src
#
# tests:
#   spec:
#     main: Spec
#     source-dirs: test
#     dependencies:
#       - git-comtemplate
#       - hspec ^>= 2.7

ghc-options:
# For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
# This list taken from https://medium.com/mercury-bank/enable-all-the-warnings-a0517bc081c3
# Enable all warnings with -Weverything, then disable the ones we don’t care about
- -Weverything
- -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
- -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
- -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
- -Wno-all-missed-specialisations # See missed-specialisations
- -Wno-unsafe # Don’t use Safe Haskell warnings
- -Wno-safe # Don’t use Safe Haskell warnings
- -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
- -Wno-monomorphism-restriction # Don’t warn if the monomorphism restriction is used
- -Wno-implicit-prelude # don't warn on implicit prelude import
